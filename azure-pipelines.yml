trigger:
  branches:
    include:
      - development
      - master


jobs:
- job: BuildFixitMobileComponentLib
  displayName: 'Build Fixit Mobile Component Library'

  pool:
    vmImage: 'windows-2019'
    displayName: 'Run Main Build and Test Pipeline'
    
  steps:

  # Run npm install
  - task: Npm@1
    displayName: 'Run npm install'
    inputs:
      command: 'install'


  # Run Unit Tests
  - task: Npm@1
    displayName: 'Run Unit Tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
  
  # Publish Test Results
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test/junit.xml'
      failTaskOnFailedTests: true

  # Publish Code Coverage Results
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code Coverage Results'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.Repository.LocalPath)\coverage\cobertura-coverage.xml'
      reportDirectory: '$(Build.Repository.LocalPath)\coverage\'


  # Build Docz
  - task: Npm@1
    displayName: 'Run Build Docz'
    inputs:
      command: 'custom'
      customCommand: 'run build'

  # Copy Docz Files To Artifacts Staging Directory
  - task: CopyFiles@2
    displayName: 'Copy Docz Files To Artifacts Staging Directory'
    inputs:
      SourceFolder: '.docz\dist'
      Contents: '**'
      TargetFolder: '$(Build.Artifactstagingdirectory)'
      CleanTargetFolder: true
      OverWrite: true

  # Publish Docz
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Docz'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'


  # Add Git User
  - task: Bash@3
    displayName: 'Add Git User'
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "Admin@FixIt148.onmicrosoft.com"
        git config --global user.name "Fixit"

  # Bump Package Version Patch
  - task: Npm@1
    displayName: 'Bump Package Version'
    inputs:
      command: 'custom'
      customCommand: 'version patch -m "Bump package version [skip ci]" --force'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
  
  # Bump Package Version Minor
  - task: Npm@1
    displayName: 'Bump Package Version'
    inputs:
      command: 'custom'
      customCommand: 'version minor -m "Bump package version [skip ci]" --force'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  # Commiting the package.json version bump 
  # Official microsoft documentation:
  # (https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/javascript?view=azure-devops&tabs=code)
  - task: CmdLine@2
    displayName: 'Commit version bump'
    inputs:
      script: |
        git commit -a -m "Auto CI commit [skip ci]"
        git push -u https://Admin%40FixIt148.onmicrosoft.com:$(GitCredentials)@dev.azure.com/FixIt-App/FixIt-Capstone/_git/FixitCommonUILib HEAD:development
    condition: succeeded()

  # Publishes npm package
  - task: Npm@1
    displayName: 'Publish Artifact'
    inputs:
      command: 'publish'
      publishRegistry: 'useFeed'
      # publishFeed: projectName/feedName
      publishFeed: '08d378fd-be72-4c80-9ce4-1a7c754efb98/7ba6392b-6ff3-4d8f-bdc4-0a4bcdee1710'
    condition: succeeded()
